{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerGambler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "electionFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "loser",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawGain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerGambler\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"loser\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PredictionMarket.sol\":{\"keccak256\":\"0xee58d90f56627bbf6bd7f8f32f6a5ef40adb6a5424b0d11e1930fb2a92703a5c\",\"urls\":[\"bzz-raw://b5d24b397fc92db21cf26316c170f071bef60bcb02d1bf1b9492e27316f83af2\",\"dweb:/ipfs/QmZuNffJY7WxLKN556BqGpsbKmvvrkSwfb9yW2EcYz57Zx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a09380380610a098339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610974806100956000396000f3fe60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b1565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106e8565b005b34801561011f57600080fd5b5061012861089c565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108c8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108ee565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092b565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160009054906101000a900460ff16151514610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042b57fe5b600181111561043657fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046757fe5b600181111561047257fe5b815260200190815260200160002054028161048957fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104dd57fe5b60018111156104e857fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054957fe5b600181111561055457fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ac573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461063a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064b57fe5b600181111561065657fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106bf57fe5b60018111156106ca57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600160009054906101000a900460ff16151514610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f656c656374696f6e20697320616c72656164792066696e69736865640000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085457fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087957fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900460ff168156fea26469706673582212201c709abad8004392ac5b570083860cba819ebb10edb8a1cdcc3ffb6ecbcd1e8164736f6c63430007030033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b1565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106e8565b005b34801561011f57600080fd5b5061012861089c565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108c8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108ee565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092b565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160009054906101000a900460ff16151514610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042b57fe5b600181111561043657fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046757fe5b600181111561047257fe5b815260200190815260200160002054028161048957fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104dd57fe5b60018111156104e857fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054957fe5b600181111561055457fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ac573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461063a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064b57fe5b600181111561065657fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106bf57fe5b60018111156106ca57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600160009054906101000a900460ff16151514610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f656c656374696f6e20697320616c72656164792066696e69736865640000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085457fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087957fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900460ff168156fea26469706673582212201c709abad8004392ac5b570083860cba819ebb10edb8a1cdcc3ffb6ecbcd1e8164736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "25:1433:0:-:0;;;354:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:7;392:6;;:16;;;;;;;;;;;;;;;;;;354:61;25:1433;;;;;;",
  "deployedSourceMap": "25:1433:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:504;;;;;;;;;;;;;:::i;:::-;;421:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1156:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;157:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;219:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;258:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;184:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;646:504;689:15;707:14;:26;722:10;707:26;;;;;;;;;;;;;;;:41;734:6;:13;;;;;;;;;;;;707:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:59;;788:1;775:10;:14;767:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:4;843:24;;:16;;;;;;;;;;;:24;;;835:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:9;971:4;:19;976:6;:13;;;;;;;;;;;;971:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;958:10;937:4;:18;942:6;:12;;;;;;;;;;;;937:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;:53;;;;;;924:10;:66;912:78;;1047:1;1006:14;:26;1021:10;1006:26;;;;;;;;;;;;;;;:38;1033:10;1006:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1099:1;1058:14;:26;1073:10;1058:26;;;;;;;;;;;;;;;:38;1085:10;1058:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1118:10;:19;;:25;1138:4;1118:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:504;;:::o;421:219::-;505:5;485:25;;:16;;;;;;;;;;;:25;;;477:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:9;553:4;:11;558:5;553:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;624:9;587:14;:26;602:10;587:26;;;;;;;;;;;;;;;:33;614:5;587:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;421:219;:::o;1156:300::-;1242:10;1232:20;;:6;;;;;;;;;;;:20;;;1224:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:5;1286:25;;:16;;;;;;;;;;;:25;;;1278:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:7;1362:6;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;1410:6;1395;:12;;;:21;;;;;;;;;;;;;;;;;;;;;;;;1445:4;1426:16;;:23;;;;;;;;;;;;;;;;;;1156:300;;:::o;157:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;326:21::-;;;;;;;;;;;;;:::o;219:33::-;;;;;;;;;;;;;;;;;:::o;258:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;184:28::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.7.3;\n\ncontract PredictionMarket{\n    enum Side {Biden, Trump}\n   \n    struct Result {\n        Side winner;\n        Side loser;\n    }\n\n    Result public result;\n\n    bool public electionFinished;\n\n    mapping(Side => uint) public bets;\n    mapping(address => mapping(Side=>uint)) public betsPerGambler;\n\n    address public oracle;\n\n    constructor(address _oracle){\n        oracle = _oracle;\n    }\n\n    function placeBet(Side _side) external payable{\n        require(electionFinished == false, 'election is finished');\n       \n        bets[_side] += msg.value;\n        betsPerGambler[msg.sender][_side] += msg.value;\n    }\n\n    function withdrawGain() external {\n        uint gamblerBet = betsPerGambler[msg.sender][result.winner];\n        \n        require(gamblerBet > 0, 'you do not have any winning bet');\n        require(electionFinished == true, 'election not finished');\n        \n        uint gain = gamblerBet + bets[result.loser] * gamblerBet / bets[result.winner];\n     \n        betsPerGambler[msg.sender][Side.Biden] = 0;\n        betsPerGambler[msg.sender][Side.Trump] = 0;\n       \n        msg.sender.transfer(gain);\n    }\n\n    function reportResult(Side _winner, Side _loser) external {\n        require(oracle == msg.sender, 'only oracle');\n        require(electionFinished == false, 'election is already finished');\n       \n        result.winner = _winner;\n        result.loser = _loser;\n        electionFinished = true;\n    }\n}",
  "sourcePath": "/Users/yigitzarbun/Desktop/pmarkt/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [177]
    },
    "id": 178,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.7", ".3"],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 177,
        "linearizedBaseContracts": [177],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 4,
            "members": [
              {
                "id": 2,
                "name": "Biden",
                "nodeType": "EnumValue",
                "src": "67:5:0"
              },
              {
                "id": 3,
                "name": "Trump",
                "nodeType": "EnumValue",
                "src": "74:5:0"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "56:24:0"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "113:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$4",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 5,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4,
                  "src": "113:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "134:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$4",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 7,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4,
                  "src": "134:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 177,
            "src": "89:62:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 11,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "157:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$9_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 10,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9,
              "src": "157:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$9_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "beab6e7e",
            "id": 13,
            "mutability": "mutable",
            "name": "electionFinished",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "184:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "184:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 17,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "219:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4,
                "src": "227:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$4",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "219:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "235:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 23,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "258:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "258:39:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 21,
                "keyType": {
                  "id": 19,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4,
                  "src": "285:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "277:19:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 25,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "326:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "382:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "392:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "401:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "392:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "392:16:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "366:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:17:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:0"
            },
            "scope": 177,
            "src": "354:61:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "467:173:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "485:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "505:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "485:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "512:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "477:58:0"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "553:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 49,
                      "indexExpression": {
                        "id": 48,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "558:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$4",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "553:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "568:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "568:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "553:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "553:24:0"
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 54,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "587:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 58,
                        "indexExpression": {
                          "expression": {
                            "id": 55,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "602:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "587:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 59,
                      "indexExpression": {
                        "id": 57,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "614:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$4",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "587:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "624:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "624:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "587:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "587:46:0"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "439:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4,
                    "src": "439:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$4",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:12:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:0"
            },
            "scope": 177,
            "src": "421:219:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "679:471:0",
              "statements": [
                {
                  "assignments": [69],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 136,
                      "src": "689:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "689:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 70,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "707:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 73,
                      "indexExpression": {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "722:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "722:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "707:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 76,
                    "indexExpression": {
                      "expression": {
                        "id": 74,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "734:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$9_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "734:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$4",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "707:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "775:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "788:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "775:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "791:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "767:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "767:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "843:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "863:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "843:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e206e6f742066696e6973686564",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        },
                        "value": "election not finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "835:58:0"
                },
                {
                  "assignments": [93],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 136,
                      "src": "912:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "912:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 94,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "924:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 95,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "937:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 98,
                          "indexExpression": {
                            "expression": {
                              "id": 96,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "942:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$9_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "942:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$4",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "937:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 99,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "937:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "971:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 104,
                        "indexExpression": {
                          "expression": {
                            "id": 102,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "976:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$9_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "976:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$4",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "971:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "937:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "924:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "912:78:0"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 108,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1006:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 113,
                        "indexExpression": {
                          "expression": {
                            "id": 109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1021:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1021:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1006:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "expression": {
                          "id": 111,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1033:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$4_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Biden",
                        "nodeType": "MemberAccess",
                        "src": "1033:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$4",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1006:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1047:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1006:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:42:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 118,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1058:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$4_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "expression": {
                            "id": 119,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1073:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1073:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1058:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$4_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 124,
                      "indexExpression": {
                        "expression": {
                          "id": 121,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1085:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$4_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Trump",
                        "nodeType": "MemberAccess",
                        "src": "1085:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$4",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1058:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1099:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1058:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1138:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1118:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1118:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1118:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:25:0"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:2:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:0"
            },
            "scope": 177,
            "src": "646:504:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "1214:242:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 145,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "1232:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 146,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1242:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1242:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1232:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 153,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1286:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1286:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e20697320616c72656164792066696e6973686564",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1313:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38df818cfd2853301964b2b6324314b92cce6e0f29e405052826b1c921c90418",
                          "typeString": "literal_string \"election is already finished\""
                        },
                        "value": "election is already finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38df818cfd2853301964b2b6324314b92cce6e0f29e405052826b1c921c90418",
                          "typeString": "literal_string \"election is already finished\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1278:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:66:0"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1362:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$9_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "1362:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$4",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 162,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "1378:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$4",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1362:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$4",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:23:0"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1395:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$9_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "1395:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$4",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1410:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$4",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1395:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$4",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:21:0"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "electionFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1426:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1445:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1426:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:23:0"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1178:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4,
                    "src": "1178:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$4",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1192:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$4",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4,
                    "src": "1192:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$4",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:27:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1214:0:0"
            },
            "scope": 177,
            "src": "1156:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 178,
        "src": "25:1433:0"
      }
    ],
    "src": "0:1458:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/PredictionMarket.sol",
      "exportedSymbols": {
        "PredictionMarket": [177]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": ["solidity", "^", "0.7", ".3"]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [null],
          "contractDependencies": [null],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [177],
          "name": "PredictionMarket",
          "scope": 178
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "Biden"
                },
                "id": 2,
                "name": "EnumValue",
                "src": "67:5:0"
              },
              {
                "attributes": {
                  "name": "Trump"
                },
                "id": 3,
                "name": "EnumValue",
                "src": "74:5:0"
              }
            ],
            "id": 4,
            "name": "EnumDefinition",
            "src": "56:24:0"
          },
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Result",
              "name": "Result",
              "scope": 177,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "scope": 9,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 4,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 5,
                    "name": "UserDefinedTypeName",
                    "src": "113:4:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "113:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "loser",
                  "scope": 9,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 4,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 7,
                    "name": "UserDefinedTypeName",
                    "src": "134:4:0"
                  }
                ],
                "id": 8,
                "name": "VariableDeclaration",
                "src": "134:10:0"
              }
            ],
            "id": 9,
            "name": "StructDefinition",
            "src": "89:62:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "65372147",
              "mutability": "mutable",
              "name": "result",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct PredictionMarket.Result",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "Result",
                  "referencedDeclaration": 9,
                  "type": "struct PredictionMarket.Result"
                },
                "id": 10,
                "name": "UserDefinedTypeName",
                "src": "157:6:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "157:20:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "beab6e7e",
              "mutability": "mutable",
              "name": "electionFinished",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 12,
                "name": "ElementaryTypeName",
                "src": "184:4:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "184:28:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7e0ecc00",
              "mutability": "mutable",
              "name": "bets",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(enum PredictionMarket.Side => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 4,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 14,
                    "name": "UserDefinedTypeName",
                    "src": "227:4:0"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "235:4:0"
                  }
                ],
                "id": 16,
                "name": "Mapping",
                "src": "219:21:0"
              }
            ],
            "id": 17,
            "name": "VariableDeclaration",
            "src": "219:33:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9d5a3739",
              "mutability": "mutable",
              "name": "betsPerGambler",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "266:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(enum PredictionMarket.Side => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 4,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 19,
                        "name": "UserDefinedTypeName",
                        "src": "285:4:0"
                      },
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "291:4:0"
                      }
                    ],
                    "id": 21,
                    "name": "Mapping",
                    "src": "277:19:0"
                  }
                ],
                "id": 22,
                "name": "Mapping",
                "src": "258:39:0"
              }
            ],
            "id": 23,
            "name": "VariableDeclaration",
            "src": "258:61:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7dc0d1d0",
              "mutability": "mutable",
              "name": "oracle",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 24,
                "name": "ElementaryTypeName",
                "src": "326:7:0"
              }
            ],
            "id": 25,
            "name": "VariableDeclaration",
            "src": "326:21:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [null],
              "name": "",
              "scope": 177,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_oracle",
                      "scope": 35,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 26,
                        "name": "ElementaryTypeName",
                        "src": "366:7:0"
                      }
                    ],
                    "id": 27,
                    "name": "VariableDeclaration",
                    "src": "366:15:0"
                  }
                ],
                "id": 28,
                "name": "ParameterList",
                "src": "365:17:0"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 29,
                "name": "ParameterList",
                "src": "382:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 25,
                              "type": "address",
                              "value": "oracle"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "392:6:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 27,
                              "type": "address",
                              "value": "_oracle"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "401:7:0"
                          }
                        ],
                        "id": 32,
                        "name": "Assignment",
                        "src": "392:16:0"
                      }
                    ],
                    "id": 33,
                    "name": "ExpressionStatement",
                    "src": "392:16:0"
                  }
                ],
                "id": 34,
                "name": "Block",
                "src": "382:33:0"
              }
            ],
            "id": 35,
            "name": "FunctionDefinition",
            "src": "354:61:0"
          },
          {
            "attributes": {
              "functionSelector": "43046844",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "placeBet",
              "scope": 177,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_side",
                      "scope": 65,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 4,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 36,
                        "name": "UserDefinedTypeName",
                        "src": "439:4:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclaration",
                    "src": "439:10:0"
                  }
                ],
                "id": 38,
                "name": "ParameterList",
                "src": "438:12:0"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 39,
                "name": "ParameterList",
                "src": "467:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                                  "typeString": "literal_string \"election is finished\""
                                }
                              ],
                              "overloadedDeclarations": [-18, -18],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 40,
                            "name": "Identifier",
                            "src": "477:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 13,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 41,
                                "name": "Identifier",
                                "src": "485:16:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 42,
                                "name": "Literal",
                                "src": "505:5:0"
                              }
                            ],
                            "id": 43,
                            "name": "BinaryOperation",
                            "src": "485:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election is finished\"",
                              "value": "election is finished"
                            },
                            "id": 44,
                            "name": "Literal",
                            "src": "512:22:0"
                          }
                        ],
                        "id": 45,
                        "name": "FunctionCall",
                        "src": "477:58:0"
                      }
                    ],
                    "id": 46,
                    "name": "ExpressionStatement",
                    "src": "477:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 17,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)",
                                  "value": "bets"
                                },
                                "id": 47,
                                "name": "Identifier",
                                "src": "553:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 37,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 48,
                                "name": "Identifier",
                                "src": "558:5:0"
                              }
                            ],
                            "id": 49,
                            "name": "IndexAccess",
                            "src": "553:11:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 50,
                                "name": "Identifier",
                                "src": "568:3:0"
                              }
                            ],
                            "id": 51,
                            "name": "MemberAccess",
                            "src": "568:9:0"
                          }
                        ],
                        "id": 52,
                        "name": "Assignment",
                        "src": "553:24:0"
                      }
                    ],
                    "id": 53,
                    "name": "ExpressionStatement",
                    "src": "553:24:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 23,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 54,
                                    "name": "Identifier",
                                    "src": "587:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 55,
                                        "name": "Identifier",
                                        "src": "602:3:0"
                                      }
                                    ],
                                    "id": 56,
                                    "name": "MemberAccess",
                                    "src": "602:10:0"
                                  }
                                ],
                                "id": 58,
                                "name": "IndexAccess",
                                "src": "587:26:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 37,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 57,
                                "name": "Identifier",
                                "src": "614:5:0"
                              }
                            ],
                            "id": 59,
                            "name": "IndexAccess",
                            "src": "587:33:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 60,
                                "name": "Identifier",
                                "src": "624:3:0"
                              }
                            ],
                            "id": 61,
                            "name": "MemberAccess",
                            "src": "624:9:0"
                          }
                        ],
                        "id": 62,
                        "name": "Assignment",
                        "src": "587:46:0"
                      }
                    ],
                    "id": 63,
                    "name": "ExpressionStatement",
                    "src": "587:46:0"
                  }
                ],
                "id": 64,
                "name": "Block",
                "src": "467:173:0"
              }
            ],
            "id": 65,
            "name": "FunctionDefinition",
            "src": "421:219:0"
          },
          {
            "attributes": {
              "functionSelector": "2b539c86",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "withdrawGain",
              "scope": 177,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 66,
                "name": "ParameterList",
                "src": "667:2:0"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 67,
                "name": "ParameterList",
                "src": "679:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [69]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gamblerBet",
                          "scope": 136,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 68,
                            "name": "ElementaryTypeName",
                            "src": "689:4:0"
                          }
                        ],
                        "id": 69,
                        "name": "VariableDeclaration",
                        "src": "689:15:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(enum PredictionMarket.Side => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 23,
                                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                  "value": "betsPerGambler"
                                },
                                "id": 70,
                                "name": "Identifier",
                                "src": "707:14:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 71,
                                    "name": "Identifier",
                                    "src": "722:3:0"
                                  }
                                ],
                                "id": 72,
                                "name": "MemberAccess",
                                "src": "722:10:0"
                              }
                            ],
                            "id": 73,
                            "name": "IndexAccess",
                            "src": "707:26:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "winner",
                              "referencedDeclaration": 6,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 11,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "734:6:0"
                              }
                            ],
                            "id": 75,
                            "name": "MemberAccess",
                            "src": "734:13:0"
                          }
                        ],
                        "id": 76,
                        "name": "IndexAccess",
                        "src": "707:41:0"
                      }
                    ],
                    "id": 77,
                    "name": "VariableDeclarationStatement",
                    "src": "689:59:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                                  "typeString": "literal_string \"you do not have any winning bet\""
                                }
                              ],
                              "overloadedDeclarations": [-18, -18],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 78,
                            "name": "Identifier",
                            "src": "767:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 69,
                                  "type": "uint256",
                                  "value": "gamblerBet"
                                },
                                "id": 79,
                                "name": "Identifier",
                                "src": "775:10:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 80,
                                "name": "Literal",
                                "src": "788:1:0"
                              }
                            ],
                            "id": 81,
                            "name": "BinaryOperation",
                            "src": "775:14:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"you do not have any winning bet\"",
                              "value": "you do not have any winning bet"
                            },
                            "id": 82,
                            "name": "Literal",
                            "src": "791:33:0"
                          }
                        ],
                        "id": 83,
                        "name": "FunctionCall",
                        "src": "767:58:0"
                      }
                    ],
                    "id": 84,
                    "name": "ExpressionStatement",
                    "src": "767:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                                  "typeString": "literal_string \"election not finished\""
                                }
                              ],
                              "overloadedDeclarations": [-18, -18],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 85,
                            "name": "Identifier",
                            "src": "835:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 13,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 86,
                                "name": "Identifier",
                                "src": "843:16:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 87,
                                "name": "Literal",
                                "src": "863:4:0"
                              }
                            ],
                            "id": 88,
                            "name": "BinaryOperation",
                            "src": "843:24:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e206e6f742066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election not finished\"",
                              "value": "election not finished"
                            },
                            "id": 89,
                            "name": "Literal",
                            "src": "869:23:0"
                          }
                        ],
                        "id": 90,
                        "name": "FunctionCall",
                        "src": "835:58:0"
                      }
                    ],
                    "id": 91,
                    "name": "ExpressionStatement",
                    "src": "835:58:0"
                  },
                  {
                    "attributes": {
                      "assignments": [93]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gain",
                          "scope": 136,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 92,
                            "name": "ElementaryTypeName",
                            "src": "912:4:0"
                          }
                        ],
                        "id": 93,
                        "name": "VariableDeclaration",
                        "src": "912:9:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 69,
                              "type": "uint256",
                              "value": "gamblerBet"
                            },
                            "id": 94,
                            "name": "Identifier",
                            "src": "924:10:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "/",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "*",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": 17,
                                          "type": "mapping(enum PredictionMarket.Side => uint256)",
                                          "value": "bets"
                                        },
                                        "id": 95,
                                        "name": "Identifier",
                                        "src": "937:4:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "loser",
                                          "referencedDeclaration": 8,
                                          "type": "enum PredictionMarket.Side"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [null],
                                              "referencedDeclaration": 11,
                                              "type": "struct PredictionMarket.Result storage ref",
                                              "value": "result"
                                            },
                                            "id": 96,
                                            "name": "Identifier",
                                            "src": "942:6:0"
                                          }
                                        ],
                                        "id": 97,
                                        "name": "MemberAccess",
                                        "src": "942:12:0"
                                      }
                                    ],
                                    "id": 98,
                                    "name": "IndexAccess",
                                    "src": "937:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 69,
                                      "type": "uint256",
                                      "value": "gamblerBet"
                                    },
                                    "id": 99,
                                    "name": "Identifier",
                                    "src": "958:10:0"
                                  }
                                ],
                                "id": 100,
                                "name": "BinaryOperation",
                                "src": "937:31:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 17,
                                      "type": "mapping(enum PredictionMarket.Side => uint256)",
                                      "value": "bets"
                                    },
                                    "id": 101,
                                    "name": "Identifier",
                                    "src": "971:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "winner",
                                      "referencedDeclaration": 6,
                                      "type": "enum PredictionMarket.Side"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": 11,
                                          "type": "struct PredictionMarket.Result storage ref",
                                          "value": "result"
                                        },
                                        "id": 102,
                                        "name": "Identifier",
                                        "src": "976:6:0"
                                      }
                                    ],
                                    "id": 103,
                                    "name": "MemberAccess",
                                    "src": "976:13:0"
                                  }
                                ],
                                "id": 104,
                                "name": "IndexAccess",
                                "src": "971:19:0"
                              }
                            ],
                            "id": 105,
                            "name": "BinaryOperation",
                            "src": "937:53:0"
                          }
                        ],
                        "id": 106,
                        "name": "BinaryOperation",
                        "src": "924:66:0"
                      }
                    ],
                    "id": 107,
                    "name": "VariableDeclarationStatement",
                    "src": "912:78:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 23,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 108,
                                    "name": "Identifier",
                                    "src": "1006:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 109,
                                        "name": "Identifier",
                                        "src": "1021:3:0"
                                      }
                                    ],
                                    "id": 110,
                                    "name": "MemberAccess",
                                    "src": "1021:10:0"
                                  }
                                ],
                                "id": 113,
                                "name": "IndexAccess",
                                "src": "1006:26:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Biden",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 4,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 111,
                                    "name": "Identifier",
                                    "src": "1033:4:0"
                                  }
                                ],
                                "id": 112,
                                "name": "MemberAccess",
                                "src": "1033:10:0"
                              }
                            ],
                            "id": 114,
                            "name": "IndexAccess",
                            "src": "1006:38:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 115,
                            "name": "Literal",
                            "src": "1047:1:0"
                          }
                        ],
                        "id": 116,
                        "name": "Assignment",
                        "src": "1006:42:0"
                      }
                    ],
                    "id": 117,
                    "name": "ExpressionStatement",
                    "src": "1006:42:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 23,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 118,
                                    "name": "Identifier",
                                    "src": "1058:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 119,
                                        "name": "Identifier",
                                        "src": "1073:3:0"
                                      }
                                    ],
                                    "id": 120,
                                    "name": "MemberAccess",
                                    "src": "1073:10:0"
                                  }
                                ],
                                "id": 123,
                                "name": "IndexAccess",
                                "src": "1058:26:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Trump",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 4,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 121,
                                    "name": "Identifier",
                                    "src": "1085:4:0"
                                  }
                                ],
                                "id": 122,
                                "name": "MemberAccess",
                                "src": "1085:10:0"
                              }
                            ],
                            "id": 124,
                            "name": "IndexAccess",
                            "src": "1058:38:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 125,
                            "name": "Literal",
                            "src": "1099:1:0"
                          }
                        ],
                        "id": 126,
                        "name": "Assignment",
                        "src": "1058:42:0"
                      }
                    ],
                    "id": 127,
                    "name": "ExpressionStatement",
                    "src": "1058:42:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 128,
                                    "name": "Identifier",
                                    "src": "1118:3:0"
                                  }
                                ],
                                "id": 131,
                                "name": "MemberAccess",
                                "src": "1118:10:0"
                              }
                            ],
                            "id": 132,
                            "name": "MemberAccess",
                            "src": "1118:19:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 93,
                              "type": "uint256",
                              "value": "gain"
                            },
                            "id": 133,
                            "name": "Identifier",
                            "src": "1138:4:0"
                          }
                        ],
                        "id": 134,
                        "name": "FunctionCall",
                        "src": "1118:25:0"
                      }
                    ],
                    "id": 135,
                    "name": "ExpressionStatement",
                    "src": "1118:25:0"
                  }
                ],
                "id": 136,
                "name": "Block",
                "src": "679:471:0"
              }
            ],
            "id": 137,
            "name": "FunctionDefinition",
            "src": "646:504:0"
          },
          {
            "attributes": {
              "functionSelector": "4ec942b7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "reportResult",
              "scope": 177,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_winner",
                      "scope": 176,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 4,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 138,
                        "name": "UserDefinedTypeName",
                        "src": "1178:4:0"
                      }
                    ],
                    "id": 139,
                    "name": "VariableDeclaration",
                    "src": "1178:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_loser",
                      "scope": 176,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 4,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 140,
                        "name": "UserDefinedTypeName",
                        "src": "1192:4:0"
                      }
                    ],
                    "id": 141,
                    "name": "VariableDeclaration",
                    "src": "1192:11:0"
                  }
                ],
                "id": 142,
                "name": "ParameterList",
                "src": "1177:27:0"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 143,
                "name": "ParameterList",
                "src": "1214:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                                  "typeString": "literal_string \"only oracle\""
                                }
                              ],
                              "overloadedDeclarations": [-18, -18],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 144,
                            "name": "Identifier",
                            "src": "1224:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 25,
                                  "type": "address",
                                  "value": "oracle"
                                },
                                "id": 145,
                                "name": "Identifier",
                                "src": "1232:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 146,
                                    "name": "Identifier",
                                    "src": "1242:3:0"
                                  }
                                ],
                                "id": 147,
                                "name": "MemberAccess",
                                "src": "1242:10:0"
                              }
                            ],
                            "id": 148,
                            "name": "BinaryOperation",
                            "src": "1232:20:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "6f6e6c79206f7261636c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"only oracle\"",
                              "value": "only oracle"
                            },
                            "id": 149,
                            "name": "Literal",
                            "src": "1254:13:0"
                          }
                        ],
                        "id": 150,
                        "name": "FunctionCall",
                        "src": "1224:44:0"
                      }
                    ],
                    "id": 151,
                    "name": "ExpressionStatement",
                    "src": "1224:44:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_38df818cfd2853301964b2b6324314b92cce6e0f29e405052826b1c921c90418",
                                  "typeString": "literal_string \"election is already finished\""
                                }
                              ],
                              "overloadedDeclarations": [-18, -18],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 152,
                            "name": "Identifier",
                            "src": "1278:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 13,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 153,
                                "name": "Identifier",
                                "src": "1286:16:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 154,
                                "name": "Literal",
                                "src": "1306:5:0"
                              }
                            ],
                            "id": 155,
                            "name": "BinaryOperation",
                            "src": "1286:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e20697320616c72656164792066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election is already finished\"",
                              "value": "election is already finished"
                            },
                            "id": 156,
                            "name": "Literal",
                            "src": "1313:30:0"
                          }
                        ],
                        "id": 157,
                        "name": "FunctionCall",
                        "src": "1278:66:0"
                      }
                    ],
                    "id": 158,
                    "name": "ExpressionStatement",
                    "src": "1278:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "winner",
                              "referencedDeclaration": 6,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 11,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 159,
                                "name": "Identifier",
                                "src": "1362:6:0"
                              }
                            ],
                            "id": 161,
                            "name": "MemberAccess",
                            "src": "1362:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 139,
                              "type": "enum PredictionMarket.Side",
                              "value": "_winner"
                            },
                            "id": 162,
                            "name": "Identifier",
                            "src": "1378:7:0"
                          }
                        ],
                        "id": 163,
                        "name": "Assignment",
                        "src": "1362:23:0"
                      }
                    ],
                    "id": 164,
                    "name": "ExpressionStatement",
                    "src": "1362:23:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "loser",
                              "referencedDeclaration": 8,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 11,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 165,
                                "name": "Identifier",
                                "src": "1395:6:0"
                              }
                            ],
                            "id": 167,
                            "name": "MemberAccess",
                            "src": "1395:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 141,
                              "type": "enum PredictionMarket.Side",
                              "value": "_loser"
                            },
                            "id": 168,
                            "name": "Identifier",
                            "src": "1410:6:0"
                          }
                        ],
                        "id": 169,
                        "name": "Assignment",
                        "src": "1395:21:0"
                      }
                    ],
                    "id": 170,
                    "name": "ExpressionStatement",
                    "src": "1395:21:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 13,
                              "type": "bool",
                              "value": "electionFinished"
                            },
                            "id": 171,
                            "name": "Identifier",
                            "src": "1426:16:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 172,
                            "name": "Literal",
                            "src": "1445:4:0"
                          }
                        ],
                        "id": 173,
                        "name": "Assignment",
                        "src": "1426:23:0"
                      }
                    ],
                    "id": 174,
                    "name": "ExpressionStatement",
                    "src": "1426:23:0"
                  }
                ],
                "id": 175,
                "name": "Block",
                "src": "1214:242:0"
              }
            ],
            "id": 176,
            "name": "FunctionDefinition",
            "src": "1156:300:0"
          }
        ],
        "id": 177,
        "name": "ContractDefinition",
        "src": "25:1433:0"
      }
    ],
    "id": 178,
    "name": "SourceUnit",
    "src": "0:1458:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x8d7b4F591FfCab30BD66dD4429547f4850bDBA44",
      "transactionHash": "0xccf998a0094b9bd8415f04f6a5bc3265e9c49ab9bbb0fbd357aae293d3c5260e"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-09-14T08:21:08.383Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
